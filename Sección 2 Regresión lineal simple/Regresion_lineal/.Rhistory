?lm
#Ajustar el modelo de regresión linela simple con el conjunto de entrenamiento
#Escribiendo la formula de la combinación lineal de como la variable independiente va a estar en función de la dependiente
# ~ = en función a (se pone primero la variable dependiente de la independiente)
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
#Definimos la división
split = sample.split(datasett$Salary, SplitRatio = 0.8)
#Regresión lineal simple
datasett = read.csv('Salary_data.csv')
View(datasett)
View(datasett)
library(caTools)
#Definir semilla aleatoria
set.seed(123)
#Definimos la división
split = sample.split(datasett$Salary, SplitRatio = 2/3)
#conjunto de entrenamiento y de test
training_set = subset(datasett, split == TRUE)
testing_set = subset(datasett, split == FALSE)
View(testing_set)
View(testing_set)
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
View(regressor)
View(regressor)
summary(regressor)
ntre varias variabels el R-squared más alto sera la mejor opción
summary(regressor)
y_pred = predict(regressor, newdata = testing_set)
y_pred
install.packages("ggplot2")
library(ggplot2)
ggplot2() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary), #Nubes de dispersión, el aes es para la estetica
colour = "red") +
#En la geometria de la linea le diremos cual sera X y cual sera Y y dentro de Y mostraremos los pronosticos
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata =training_set)),
colour = "blue")+
ggtitle("Sueldo vs Años de experiencia (Conjunto de entrenamiento)")+
xlab("Años de experiencia")+
ylab("Sueldo")
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary), #Nubes de dispersión, el aes es para la estetica
colour = "red") +
#En la geometria de la linea le diremos cual sera X y cual sera Y y dentro de Y mostraremos los pronosticos
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata =training_set)),
colour = "blue")+
ggtitle("Sueldo vs Años de experiencia (Conjunto de entrenamiento)")+
xlab("Años de experiencia")+
ylab("Sueldo")
#Visualizando los datos del conjunto de test
ggplot() +
geom_point(aes(x = testing_set$YearsExperience, y = testing_set$Salary), #Nubes de dispersión, el aes es para la estetica
colour = "red") +
#En la geometria de la linea le diremos cual sera X y cual sera Y y dentro de Y mostraremos los test
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata =training_set)),
colour = "blue")+
ggtitle("Sueldo vs Años de experiencia (Conjunto de test)")+
xlab("Años de experiencia")+
ylab("Sueldo")
View(datasett)
View(datasett)
View(datasett)
library(caTools)
#Definir semilla aleatoria
set.seed(123)
dataset = read.csv('50_startups.csv')
#Datos Categoricos
#Codificar las variables categoricas
dataset$State = factor(dataset$State,
levels = c("New York","California","Florida"),
labels = c(1,2,3)
)
#Dividir los datos entre conjuntos de entrenamiento y prueba
#Instalando paquetes
#install.packages("caTools")
library(caTools)
#Definir semilla aleatoria
set.seed(123)
#Definimos la división (COLUMNA QUE HAREMOS LA PREDICCION (SAMPLE.SPLIT))
split = sample.split(dataset$Profit, SplitRatio = 0.8)
#conjunto de entrenamiento y de test
training_set = subset(dataset, split == TRUE)
testing_set = subset(dataset, split == FALSE)
regressor = lm(formula = Profit ~ ,
data = training_set)
ataset = read.csv('50_startups.csv')
#Datos Categoricos
#Codificar las variables categoricas
dataset$State = factor(dataset$State,
levels = c("New York","California","Florida"),
labels = c(1,2,3)
)
#Dividir los datos entre conjuntos de entrenamiento y prueba
#Instalando paquetes
#install.packages("caTools")
library(caTools)
#Definir semilla aleatoria
set.seed(123)
#Definimos la división (COLUMNA QUE HAREMOS LA PREDICCION (SAMPLE.SPLIT))
split = sample.split(dataset$Profit, SplitRatio = 0.8)
#conjunto de entrenamiento y de test
training_set = subset(dataset, split == TRUE)
ataset = read.csv('50_startups.csv')
#Datos Categoricos
#Codificar las variables categoricas
dataset$State = factor(dataset$State,
levels = c("New York","California","Florida"),
labels = c(1,2,3)
)
#Dividir los datos entre conjuntos de entrenamiento y prueba
#Instalando paquetes
#install.packages("caTools")
library(caTools)
#Definir semilla aleatoria
set.seed(123)
#Definimos la división (COLUMNA QUE HAREMOS LA PREDICCION (SAMPLE.SPLIT))
split = sample.split(dataset$Profit, SplitRatio = 0.8)
#conjunto de entrenamiento y de test
training_set = subset(dataset, split == TRUE)
#Ajustar el modelo de regresioón lineal multiple con el conjunto de entrenamiento
#Con el . le diremos que creara el modelo en función de las demas variables
regressor = lm(formula = Profit ~ .,
data = training_set)
rs
clear
cleaning
clearPushBack()
clean
